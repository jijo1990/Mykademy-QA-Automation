<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-22T16:48:21 IST" name="Suite1" finished-at="2022-06-22T16:48:57 IST" duration-ms="36460">
    <groups>
      <group name="smoke">
        <method signature="MykademyTestSuite.verifyLoginCheck(java.util.Map)[pri:2, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" name="verifyLoginCheck" class="mykademy.tests.MykademyTestSuite"/>
        <method signature="MykademyTestSuite.moveToLearnerModule()[pri:3, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" name="moveToLearnerModule" class="mykademy.tests.MykademyTestSuite"/>
        <method signature="MykademyTestSuite.verifyLearnerAdd(java.util.Map)[pri:4, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" name="verifyLearnerAdd" class="mykademy.tests.MykademyTestSuite"/>
        <method signature="MykademyTestSuite.OtherLearnerModuleOperations(java.util.Map)[pri:5, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" name="OtherLearnerModuleOperations" class="mykademy.tests.MykademyTestSuite"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2022-06-22T16:48:21 IST" name="smoke" finished-at="2022-06-22T16:48:57 IST" duration-ms="36460">
      <class name="mykademy.tests.MykademyTestSuite">
        <test-method is-config="true" signature="initDriver()[pri:0, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" started-at="2022-06-22T16:48:16 IST" name="initDriver" finished-at="2022-06-22T16:48:21 IST" duration-ms="4187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDriver -->
        <test-method is-config="true" signature="initApp()[pri:0, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" started-at="2022-06-22T16:48:21 IST" name="initApp" finished-at="2022-06-22T16:48:21 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initApp -->
        <test-method signature="verifyLoginCheck(java.util.Map)[pri:2, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" started-at="2022-06-22T16:48:21 IST" name="verifyLoginCheck" data-provider="getData" finished-at="2022-06-22T16:48:26 IST" duration-ms="4865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{username=thanveer.a+25@enfintechnologies.com, password=123456ab}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginCheck -->
        <test-method signature="moveToLearnerModule()[pri:3, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" started-at="2022-06-22T16:48:26 IST" name="moveToLearnerModule" finished-at="2022-06-22T16:48:28 IST" duration-ms="2684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- moveToLearnerModule -->
        <test-method signature="verifyLearnerAdd(java.util.Map)[pri:4, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" started-at="2022-06-22T16:48:28 IST" name="verifyLearnerAdd" data-provider="getData" finished-at="2022-06-22T16:48:30 IST" duration-ms="1929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{stdName=Jijo Joseph 6902, stdEmail=jijo.joseph+6902@mykademy.com, stdPhone=08988885479, stdPassword=Passowrd@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLearnerAdd -->
        <test-method signature="verifyLearnerAdd(java.util.Map)[pri:4, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" started-at="2022-06-22T16:48:30 IST" name="verifyLearnerAdd" data-provider="getData" finished-at="2022-06-22T16:48:32 IST" duration-ms="1503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{stdName=Jijo Joseph 6901, stdEmail=jijo.joseph+6901@mykademy.com, stdPhone=08988885477, stdPassword=Passowrd@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLearnerAdd -->
        <test-method signature="OtherLearnerModuleOperations(java.util.Map)[pri:5, instance:mykademy.tests.MykademyTestSuite@73e22a3d]" started-at="2022-06-22T16:48:32 IST" name="OtherLearnerModuleOperations" data-provider="getData" finished-at="2022-06-22T16:48:57 IST" duration-ms="25246" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{searchUsers=Jijo Joseph 6902, Jijo Joseph 6901}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 0 out of bounds for length 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
at java.base/java.util.Objects.checkIndex(Objects.java:372)
at java.base/java.util.ArrayList.get(ArrayList.java:459)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:40)
at com.sun.proxy.$Proxy15.get(Unknown Source)
at mykademy.pages.LearnerModule.UploadLearners(LearnerModule.java:161)
at mykademy.tests.MykademyTestSuite.OtherLearnerModuleOperations(MykademyTestSuite.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OtherLearnerModuleOperations -->
      </class> <!-- mykademy.tests.MykademyTestSuite -->
    </test> <!-- smoke -->
  </suite> <!-- Suite1 -->
</testng-results>
